<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.mic.dao.stuclass.StudentClassroomDao">
  		<select id="getCourse" parameterType="Integer" resultType="com.mic.bean.course.StuCourse">
			SELECT
				course.id,
				teacher.username teacherName,
				course_name,
				course.address
			FROM
				teacher INNER JOIN
				course INNER JOIN
				elective
				ON
				course.id = course_id AND
				teacher_id = teacher.id
			WHERE
				student_id =#{studentId}
			order by course.id desc;
  		</select>
  		
  		<select id="getCouNoteList" parameterType="Integer" resultType="com.mic.bean.course.CourseNote">
  					SELECT
						course_note.id,
						course.course_name Introduction,
						course_note.begin_time,
						course_note.end_time,
						course_note.`name`
					FROM
						course INNER JOIN
						course_note ON
						course.id = course_note.course_id
					WHERE
						course.id = #{no}
					order by course_note.id desc;
  		</select>
  		
  		<select id="getProblemsList" parameterType="Integer" resultType="com.mic.bean.db.Problems">
				SELECT
					id,
					problem,
					imgsrc,
					anonymity
				FROM
					problem
				WHERE
					dispark = 1
				AND
					course_note_id = #{no}
				order by id desc;
  		</select>
  		<insert id="stuAnswer" parameterType="Map" >
  			INSERT INTO
				reply(
					problem_id,
					student_id,
					answer
				)VALUES(
				  #{no},
				  #{studentId},
				  #{ans}
				);
  		</insert>
  		
  		<select id="getStuAnsProb" parameterType="Integer" resultType="Integer">
				SELECT
					problem_id
				FROM
					reply
				WHERE
					student_id = #{stuId};
  		</select>
  		
  		<select id="getAns" parameterType="Integer" resultType="String">
  				SELECT
					answer
				FROM
					problem
				WHERE
					id = #{no};
  		</select>
  		
  		<update id="addIntegral" parameterType="Map">
				UPDATE
					elective
				SET
					integral = integral + #{integralNub}
				WHERE
					student_id = #{studentId} AND
					course_id = (
						SELECT
							course_id
						FROM
							course_note
						WHERE
							id = (
								SELECT
									course_note_id
								FROM
									problem
								WHERE
									id = #{no}
							)
					);
  		</update>
  		
  		<select id="getEndTime"  resultType="String" parameterType="Integer">
  			SELECT	
				end_time
			FROM	
				course_note
			WHERE
				id = (
					SELECT
						course_note_id
					FROM
						problem
					WHERE
						id = #{no}
				)
  		</select>
  </mapper>